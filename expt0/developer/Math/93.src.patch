diff --git a/org/apache/commons/math/util/MathUtils.java b/org/apache/commons/math/util/MathUtils.java
index 1389d5a..50ed22a 100644
--- a/org/apache/commons/math/util/MathUtils.java
+++ b/org/apache/commons/math/util/MathUtils.java
@@ -311,13 +311,6 @@ public final class MathUtils {
         }
         return true;
     }
-    
-    /** All long-representable factorials */
-    private static final long[] factorials = new long[] 
-       {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,
-        479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,
-        355687428096000l, 6402373705728000l, 121645100408832000l,
-        2432902008176640000l};
 
     /**
      * Returns n!. Shorthand for <code>n</code> <a
@@ -342,14 +335,12 @@ public final class MathUtils {
      * @throws IllegalArgumentException if n < 0
      */
     public static long factorial(final int n) {
-        if (n < 0) {
-            throw new IllegalArgumentException("must have n >= 0 for n!");
-        }
-        if (n > 20) {
+        long result = Math.round(factorialDouble(n));
+        if (result == Long.MAX_VALUE) {
             throw new ArithmeticException(
-                    "factorial value is too large to fit in a long");
+                "result too large to represent in a long integer");
         }
-        return factorials[n];
+        return result;
     }
 
     /**
@@ -376,9 +367,6 @@ public final class MathUtils {
         if (n < 0) {
             throw new IllegalArgumentException("must have n >= 0 for n!");
         }
-        if (n < 21) {
-            return factorial(n);
-        }
         return Math.floor(Math.exp(factorialLog(n)) + 0.5);
     }
 
@@ -399,9 +387,6 @@ public final class MathUtils {
         if (n < 0) {
             throw new IllegalArgumentException("must have n > 0 for n!");
         }
-        if (n < 21) {
-            return Math.log(factorial(n));
-        }
         double logSum = 0;
         for (int i = 2; i <= n; i++) {
             logSum += Math.log((double)i);
