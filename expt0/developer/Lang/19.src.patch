diff --git a/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index 3d4c238..ffd969f 100644
--- a/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -35,9 +33,7 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        int seqEnd = input.length();
-        // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {
+        if(input.charAt(index) == '&' && index < (input.length() - 1) && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
@@ -45,19 +41,10 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
-                // Check there's more than just an x after the &#
-                if(start == seqEnd) {
-                    return 0;
-                }
             }
 
             int end = start;
-            // Note that this supports character codes without a ; on the end
-            while(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||
-                                    (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||
-                                    (input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ) )
-            {
+            while(input.charAt(end) != ';') {
                 end++;
             }
 
@@ -69,7 +56,6 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
-            System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
                 return 0;
             }
 
@@ -80,10 +66,7 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
             } else {
                 out.write(entityValue);
             }
-
-            boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');
-
-            return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);
+            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
