diff --git a/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index 86521bd..813a2ee 100644
--- a/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -210,15 +210,9 @@ class PeepholeSubstituteAlternateSyntax
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
+      // Fold String(a) to ''+(a) - which allows further optimizations
       Node value = callTarget.getNext();
-      if (value != null && value.getNext() == null &&
-          NodeUtil.isImmutableValue(value)) {
+      if (value != null) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
