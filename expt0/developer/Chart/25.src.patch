Index: org/jfree/chart/renderer/category/StatisticalBarRenderer.java
===================================================================
--- org/jfree/chart/renderer/category/StatisticalBarRenderer.java	(revision 164)
+++ org/jfree/chart/renderer/category/StatisticalBarRenderer.java	(revision 162)
@@ -256,9 +255,6 @@
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
-        if (meanValue == null) {
-            return;
-        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -315,44 +311,41 @@
         }
 
         // standard deviation lines
-        Number n = dataset.getStdDevValue(row, column);
-        if (n != null) {
-            double valueDelta = n.doubleValue();
-            double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
-                    + valueDelta, dataArea, yAxisLocation);
-            double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
-                    - valueDelta, dataArea, yAxisLocation);
+        double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
+                + valueDelta, dataArea, yAxisLocation);
+        double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
+                - valueDelta, dataArea, yAxisLocation);
 
-            if (this.errorIndicatorStroke != null) {
-                g2.setStroke(this.errorIndicatorStroke);
-            }
-            else {
-                g2.setStroke(getItemOutlineStroke(row, column));
-            }
-            if (this.errorIndicatorPaint != null) {
-                g2.setPaint(this.errorIndicatorPaint);  
-            }
-            else {
-                g2.setPaint(getItemOutlinePaint(row, column));   
-            }
-        
-            Line2D line = null;
-            line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d, 
-                                     highVal, rectY + rectHeight / 2.0d);
-            g2.draw(line);
-            line = new Line2D.Double(highVal, rectY + rectHeight * 0.25, 
-                                     highVal, rectY + rectHeight * 0.75);
-            g2.draw(line);
-            line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
-                                     lowVal, rectY + rectHeight * 0.75);
-            g2.draw(line);
+        if (this.errorIndicatorStroke != null) {
+            g2.setStroke(this.errorIndicatorStroke);
         }
+        else {
+            g2.setStroke(getItemOutlineStroke(row, column));
+        }
+        if (this.errorIndicatorPaint != null) {
+            g2.setPaint(this.errorIndicatorPaint);  
+        }
+        else {
+            g2.setPaint(getItemOutlinePaint(row, column));   
+        }
         
+        Line2D line = null;
+        line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d, 
+                                 highVal, rectY + rectHeight / 2.0d);
+        g2.draw(line);
+        line = new Line2D.Double(highVal, rectY + rectHeight * 0.25, 
+                                 highVal, rectY + rectHeight * 0.75);
+        g2.draw(line);
+        line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
+                                 lowVal, rectY + rectHeight * 0.75);
+        g2.draw(line);
+        
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
         if (generator != null && isItemLabelVisible(row, column)) {
             drawItemLabel(g2, dataset, row, column, plot, generator, bar, 
-                    (value < 0.0));
+                (value < 0.0));
         }        
 
         // add an item entity, if this information is being collected
@@ -406,9 +399,6 @@
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
-        if (meanValue == null) {
-            return;
-        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -465,43 +455,40 @@
         }
 
         // standard deviation lines
-        Number n = dataset.getStdDevValue(row, column);
-        if (n != null) {
-            double valueDelta = n.doubleValue();
-            double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
-                    + valueDelta, dataArea, yAxisLocation);
-            double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
-                    - valueDelta, dataArea, yAxisLocation);
+        double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
+                + valueDelta, dataArea, yAxisLocation);
+        double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
+                - valueDelta, dataArea, yAxisLocation);
 
-            if (this.errorIndicatorStroke != null) {
-                g2.setStroke(this.errorIndicatorStroke);
-            }
-            else {
-                g2.setStroke(getItemOutlineStroke(row, column));
-            }
-            if (this.errorIndicatorPaint != null) {
-                g2.setPaint(this.errorIndicatorPaint);  
-            }
-            else {
-                g2.setPaint(getItemOutlinePaint(row, column));   
-            }
-            Line2D line = null;
-            line = new Line2D.Double(rectX + rectWidth / 2.0d, lowVal,
-                                     rectX + rectWidth / 2.0d, highVal);
-            g2.draw(line);
-            line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, highVal,
-                                     rectX + rectWidth / 2.0d + 5.0d, highVal);
-            g2.draw(line);
-            line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
-                                     rectX + rectWidth / 2.0d + 5.0d, lowVal);
-            g2.draw(line);
+        if (this.errorIndicatorStroke != null) {
+            g2.setStroke(this.errorIndicatorStroke);
         }
+        else {
+            g2.setStroke(getItemOutlineStroke(row, column));
+        }
+        if (this.errorIndicatorPaint != null) {
+            g2.setPaint(this.errorIndicatorPaint);  
+        }
+        else {
+            g2.setPaint(getItemOutlinePaint(row, column));   
+        }
+        Line2D line = null;
+        line = new Line2D.Double(rectX + rectWidth / 2.0d, lowVal,
+                                 rectX + rectWidth / 2.0d, highVal);
+        g2.draw(line);
+        line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, highVal,
+                                 rectX + rectWidth / 2.0d + 5.0d, highVal);
+        g2.draw(line);
+        line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
+                                 rectX + rectWidth / 2.0d + 5.0d, lowVal);
+        g2.draw(line);
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
         if (generator != null && isItemLabelVisible(row, column)) {
             drawItemLabel(g2, dataset, row, column, plot, generator, bar, 
-                    (value < 0.0));
+                (value < 0.0));
         }        
 
         // add an item entity, if this information is being collected
