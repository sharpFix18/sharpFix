*** /home/qx5/defects4j_bugs/bugs/langs/projs/Lang_52_buggy/src/java/org/apache/commons/lang/StringEscapeUtils.java	Wed Nov 18 16:48:05 2015
--- /home/qx5/sharpfix_expts/repair/repairflag2_faulocflag0_cignoreflag0/Lang_52/e0/f2/repair/c15/m0/p0/StringEscapeUtils.java	Fri Feb  2 21:31:17 2018
***************
*** 170,244 ****
       */
      private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
          if (out == null) {
!             throw new IllegalArgumentException("The Writer must not be null");
!         }
!         if (str == null) {
!             return;
!         }
!         int sz;
!         sz = str.length();
!         for (int i = 0; i < sz; i++) {
!             char ch = str.charAt(i);
! 
!             // handle unicode
!             if (ch > 0xfff) {
!                 out.write("\\u" + hex(ch));
!             } else if (ch > 0xff) {
!                 out.write("\\u0" + hex(ch));
!             } else if (ch > 0x7f) {
!                 out.write("\\u00" + hex(ch));
!             } else if (ch < 32) {
!                 switch (ch) {
!                     case '\b':
!                         out.write('\\');
!                         out.write('b');
!                         break;
!                     case '\n':
!                         out.write('\\');
!                         out.write('n');
!                         break;
!                     case '\t':
!                         out.write('\\');
!                         out.write('t');
!                         break;
!                     case '\f':
!                         out.write('\\');
!                         out.write('f');
!                         break;
!                     case '\r':
!                         out.write('\\');
!                         out.write('r');
!                         break;
!                     default :
!                         if (ch > 0xf) {
!                             out.write("\\u00" + hex(ch));
!                         } else {
!                             out.write("\\u000" + hex(ch));
!                         }
!                         break;
!                 }
!             } else {
!                 switch (ch) {
!                     case '\'':
!                         if (escapeSingleQuote) {
!                           out.write('\\');
!                         }
!                         out.write('\'');
!                         break;
!                     case '"':
!                         out.write('\\');
!                         out.write('"');
!                         break;
!                     case '\\':
!                         out.write('\\');
!                         out.write('\\');
!                         break;
!                     default :
!                         out.write(ch);
!                         break;
!                 }
!             }
!         }
      }
  
      /**
--- 170,252 ----
       */
      private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
          if (out == null) {
! 			throw new IllegalArgumentException("The Writer must not be null");
! 		}
! 		if (str == null) {
! 			return;
! 		}
! 		int sz;
! 		sz = str.length();
! 		for (int i = 0; i < sz; i++) {
! 			char ch = str.charAt(i);
! 			if (ch > 0xfff) {
! 				out.write("\\u" + hex(ch));
! 			} else {
! 				if (ch > 0xff) {
! 					out.write("\\u0" + hex(ch));
! 				} else {
! 					if (ch > 0x7f) {
! 						out.write("\\u00" + hex(ch));
! 					} else {
! 						if (ch < 32) {
! 							switch (ch) {
! 							case '\b':
! 								out.write('\\');
! 								out.write('b');
! 								break;
! 							case '\n':
! 								out.write('\\');
! 								out.write('n');
! 								break;
! 							case '\t':
! 								out.write('\\');
! 								out.write('t');
! 								break;
! 							case '\f':
! 								out.write('\\');
! 								out.write('f');
! 								break;
! 							case '\r':
! 								out.write('\\');
! 								out.write('r');
! 								break;
! 							default:
! 								if (ch > 0xf) {
! 									out.write("\\u00" + hex(ch));
! 								} else {
! 									out.write("\\u000" + hex(ch));
! 								}
! 								break;
! 							}
! 						} else {
! 							switch (ch) {
! 							case '\'':
! 								if (escapeSingleQuote) {
! 									out.write('\\');
! 								}
! 								out.write('\'');
! 								break;
! 							case '"':
! 								out.write('\\');
! 								out.write('"');
! 								break;
! 							case '\\':
! 								out.write('\\');
! 								out.write('\\');
! 								break;
! 							case '/':
! 								out.write('\\');
! 								out.write('/');
! 								break;
! 							default:
! 								out.write(ch);
! 								break;
! 							}
! 						}
! 					}
! 				}
! 			}
! 		}
      }
  
      /**
